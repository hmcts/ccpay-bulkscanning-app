management:
  endpoints:
    web:
      base-path: /

#If you use a database then uncomment below lines and update db properties accordingly
spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: bulk-scanning
  datasource:
    driver-class-name: org.testcontainers.jdbc.ContainerDatabaseDriver
    url: jdbc:tc:postgresql:16.0://localhost/features
  liquibase:
    enabled: ${SPRING_LIQUIBASE_ENABLED:true}
    change-log: classpath:/db/changelog/db.changelog-master.xml
#    hikari:
#      minimumIdle: 2
#      maximumPoolSize: 10
#      idleTimeout: 10000
#      poolName: {to-be-defined}HikariCP
#      maxLifetime: 7200000
#      connectionTimeout: 30000
#  jpa:
#    properties:
#      hibernate:
#        jdbc:
#          lob:
#            # silence the 'wall-of-text' - unnecessary exception throw about blob types
#            non_contextual_creation: true
  # open id
  security:
    oauth2:
      client:
        provider:
          oidc:
            issuer-uri: ${ISSUER_URI:https://idam-web-public.aat.platform.hmcts.net/o}
        # Dummy OIDC client required even we are not going to use
        registration:
          oidc:
            client-id: ${CLIENT_ID:paybubble}
            client-secret: ${OIDC_CLIENT_SECRET}
      resource:
        filter-order: 3
oidc:
  audience-list: paybubble
  issuer: ${OIDC_ISSUER:https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts}
auth:
  provider:
    service:
      client:
        baseUrl: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
  idam:
    client:
      baseUrl: https://idam-api.aat.platform.hmcts.net
test:
  url: ${TEST_URL:http://localhost:8000}
  user:
    password: ${TEST_USER_PASSWORD}
idam:
  api:
    url: ${IDAM_API_URL:https://idam-api.aat.platform.hmcts.net}
  s2s-authorised:
    services: ccpay_bubble, cmc, bulk_scan_payment_processor, api_gw, probate_frontend, divorce_frontend, ccd_gw
  s2s-auth:
    url: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
    totp_secret: dummy
    microservice: ccpay_bubble

generated:
  user:
    email:
      pattern: ${GENERATED_USER_EMAIL_PATTERN:freg-test-functional-aldie-junk-user-%s@feemail.com}

oauth2:
  redirect:
    uri: ${OAUTH2_REDIRECT_URI:https://moneyclaims.aat.platform.hmcts.net}
  client:
    id: ${OAUTH2_CLIENT_ID:cmc_citizen}
    secret: ${OAUTH2_CLIENT_SECRET_CMC_CITIZEN}

s2s:
  url: ${S2S_URL:http://rpe-service-auth-provider-aat.service.core-compute-aat.internal}
  service:
    name: ${S2S_SERVICE_NAME:cmc}
    secret: ${S2S_SERVICE_SECRET_CMC}

