management:
  endpoints:
    web:
      base-path: /
server:
  shutdown: graceful
#If you use a database then uncomment below lines and update db properties accordingly
spring:
  lifecycle:
    timeout-per-shutdown-phase: 30s
  main:
    allow-bean-definition-overriding: true
  application:
    name: bulk-scanning
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/bulk-scan
    username: ${POSTGRES_USERNAME}
    password: dummy
    properties:
      charSet: UTF-8
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
  liquibase:
    enabled: ${SPRING_LIQUIBASE_ENABLED:true}
    change-log: classpath:/db/changelog/db.changelog-master.xml

  jackson.date-format: yyyy-MM-dd
  flyway.enabled: true
  jackson:
    mapper:
      accept-case-insensitive-enums: true
    deserialization:
      fail-on-unknown-properties: true
  # open id
  security:
    oauth2:
      client:
        provider:
          oidc:
            issuer-uri: http://localhost:5000/o
        # Dummy OIDC client required even we are not going to use
        registration:
          oidc:
            client-id: internal
            client-secret: internal
oidc:
  audience-list: internal,paybubble
  issuer: ${OIDC_ISSUER:http://fr-am:8080/openam/oauth2/hmcts}

auth:
  provider:
    service:
      client:
        baseUrl: http://localhost:8489
  idam:
    client:
      baseUrl: http://localhost:8489
azure:
  application-insights:
    instrumentation-key: ${APPINSIGHTS_INSTRUMENTATIONKEY:dummy}
idam:
  api:
    url: ${IDAM_API_URL:http://localhost:5000}
  s2s-authorised:
    services: ccpay_bubble, cmc, bulk_scan_payment_processor, api_gw, probate_frontend, divorce_frontend, ccd_gw,internal
  s2s-auth:
    url: http://localhost:8489
    totp_secret: AAAAAAAAAAAAAAAA
    microservice: internal
