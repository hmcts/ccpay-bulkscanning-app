<?xml version="1.0" encoding="UTF-8"?>
<suppressions xmlns="https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.3.xsd">
  <!-- Below are the supressions added fpr False Positive CVEs -->
  <suppress>
    <notes>The CVE-2018-1258 and CVE-2021-22112 occurs from spring security libraries, despite the latest versions are used. This is confirmed as false positive
      and hence it is suppressed (https://github.com/jeremylong/DependencyCheck/issues/2952)
    </notes>
    <cve>CVE-2018-1258</cve>
  </suppress>
  <suppress>
    <notes> False positive reported at https://github.com/jeremylong/DependencyCheck/issues/1658.
      The Build fails with newer versions of the library
    </notes>
    <cve>CVE-2007-1651</cve>
    <cve>CVE-2007-1652</cve>
  </suppress>

  <suppress>
    <notes><![CDATA[
            This CVE is related to file type tag parsing. However, the associated CVE seems to be a false positive on the lang-tag jar.
            (https://github.com/jeremylong/DependencyCheck/issues/3043). The CVE occurs in the newer version.
        ]]></notes>
    <cve>CVE-2020-29242</cve>
    <cve>CVE-2020-29243</cve>
    <cve>CVE-2020-29244</cve>
    <cve>CVE-2020-29245</cve>
  </suppress>

  <suppress>
    <notes>CVE-2021-28170 https://nvd.nist.gov/vuln/detail/CVE-2021-28170
      Spring Framework vulnerability, subject to review after Spring Boot upgrade to 2.4.x affected lib org.glassfish:jakarta.el:3.0.3
    </notes>
    <cve>CVE-2021-28170</cve>
  </suppress>

   <suppress>
        <notes>A vulnerability in all versions of Nim-lang allows unauthenticated attackers to write files to
            arbitrary directories via a crafted zip file with dot-slash characters included in the name of the
            crafted file
        </notes>
        <cve>CVE-2020-23171</cve>
    </suppress>

    <suppress>
        <notes>
            Versions of the Amazon AWS Apache Log4j hotpatch package before log4j-cve-2021-44228-hotpatch-1.3.5 are
            affected by a race condition that could lead to a local privilege escalation. CVE-2022-33915 occured,
            despite latest versions used.
        </notes>
        <cve>CVE-2022-33915</cve>
    </suppress>

    <suppress>
      <notes>
        The RipudamanKaushikDal/projects repository through 2022-04-03 on GitHub allows absolute path traversal
        because the Flask send_file function is used unsafely.
      </notes>
      <cve>CVE-2022-31569</cve>
    </suppress>

    <suppress>
      <notes>
        The nrlakin/homepage repository through 2017-03-06 on GitHub allows absolute path traversal because the
        Flask send_file function is used unsafely.
      </notes>
      <cve>CVE-2022-31548</cve>
    </suppress>

    <suppress>
        <notes>
            The PGJDBC implementation of the java.sql.ResultRow.refreshRow() method is not performing escaping of column names
            so a malicious column name that contains a statement terminator, e.g. ; could lead to SQL injection. This could
            lead to executing additional SQL commands as the application's JDBC user. User applications that do not invoke the
            ResultSet.refreshRow() method are not impacted.
        </notes>
        <cve>CVE-2022-31197</cve>
    </suppress>
    <suppress>
        <notes>
            In engineSetMode of BaseBlockCipher.java, there is a possible incorrect cryptographic algorithm chosen due
            to an incomplete comparison. This could lead to local information disclosure with no additional execution
            privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions:
            Android-10Android ID: A-148517383
        </notes>
        <cve>CVE-2020-0187</cve>
    </suppress>

    <suppress>
        <notes>
            A vulnerability, which was classified as problematic, has been found in fredsmith utils. This issue affects
            some unknown processing of the file screenshot_sync of the component Filename Handler. The manipulation
            leads to predictable from observable state. The name of the patch is
            dbab1b66955eeb3d76b34612b358307f5c4e3944. It is recommended to apply a patch to fix this issue. The
            identifier VDB-216749 was assigned to this vulnerability.
        </notes>
        <cve>CVE-2021-4277</cve>
    </suppress>
    <suppress>
        <notes>
            Due to unbounded alias chasing, a maliciously crafted YAML file can cause the system to consume significant
            system resources. If parsing user input, this may be used as a denial of service vector.
        </notes>
        <cve>CVE-2021-4235</cve>
    </suppress>
    <suppress>
        <notes>
            Parsing malicious or large YAML documents can consume excessive amounts of CPU or memory.
        </notes>
        <cve>CVE-2022-3064</cve>
    </suppress>
    <suppress>
      <notes>A stack overflow in the XML.toJSONObject component of hutool-json v5.8.10
        allows attackers to cause a Denial of Service (DoS) via crafted JSON or XML data.
        New version of jackson-core needed to resolve this issue.
      </notes>
      <cve>CVE-2022-45688</cve>
    </suppress>

    <!-- Supression Group ends here -->

  <suppress until="2030-01-01">
    <notes>
      Spring context requires major update. Currently version 2.3.11 reuires major update to atleast 2.5
    </notes>
    <cve>CVE-2023-20883</cve>
  </suppress>

  <suppress>
    <notes>
      A vulnerability was discovered in the indexOf function of JSONParserByteArray in JSON Smart versions 1.3 and 2.4
    </notes>
    <cve>CVE-2021-31684</cve>
  </suppress>

  <suppress>
    <notes>
      An issue was discovered in netplex json-smart-v1 through 2015-10-23 and json-smart-v2 through 2.4.
    </notes>
    <cve>CVE-2021-27568</cve>
  </suppress>

  <suppress>
    <notes>
      Using "**" as a pattern in Spring Security configuration for WebFlux creates a mismatch in pattern matching between Spring Security and Spring WebFlux, and the potential for a security bypass.
    </notes>
    <cve>CVE-2023-34034</cve>
  </suppress>

  <suppress>
    <notes>
      A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir()
    </notes>
    <cve>CVE-2020-8908</cve>
  </suppress>

  <suppress>
    <notes>
      URL Redirection to Untrusted Site ('Open Redirect') vulnerability in FORM authentication feature Apache Tomcat.
    </notes>
    <cve>CVE-2023-41080</cve>
  </suppress>
  <suppress>
    <notes>
      Incomplete Cleanup vulnerability in Apache Tomcat.
    </notes>
    <cve>CVE-2023-42795</cve>
  </suppress>

  <suppress>
    <notes>
      Improper Input Validation vulnerability in Apache Tomcat.Tomcat
    </notes>
    <cve>CVE-2023-45648</cve>
  </suppress>
  <suppress>
    <notes>
      Denial of Service in JSON-Java versions up to and including 20230618.
    </notes>
    <cve>CVE-2023-5072</cve>
  </suppress>
  <suppress>
    <notes>
      Bouncy Castle for Java before 1.73 contains a potential Denial of Service (DoS) issue within the Bouncy Castle org.bouncycastle.openssl.PEMParser class.
    </notes>
    <cve>CVE-2023-33202</cve>
  </suppress>

  <suppress>
    <notes>
      A serialization vulnerability in logback receiver component part of logback version 1.4.11 allows an attacker to mount a Denial-Of-Service attack by sending poisoned data.
    </notes>
    <cve>CVE-2023-6378</cve>
  </suppress>

  <suppress>
    <notes>
      Loop with Unreachable Exit Condition ('Infinite Loop') vulnerability in Apache Commons Compress.This issue affects Apache Commons Compress: from 1.3 through 1.25.0. Users are recommended to upgrade to version 1.26.0 which fixes the issue.
    </notes>
    <cve>CVE-2024-25710</cve>
  </suppress>


</suppressions>


